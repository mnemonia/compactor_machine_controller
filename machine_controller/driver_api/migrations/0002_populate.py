# Generated by Django 4.1.1 on 2022-10-03 18:08

from django.db import migrations, models

PARAMS = [
    {
        "param_id": 11,
        "index": 1,
        "label": "Temperatur oben oben",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 22,
    },
    {
        "param_id": 12,
        "index": 1,
        "label": "Temperatur oben unten",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 22,
    },
    {
        "param_id": 13,
        "index": 1,
        "label": "Temperatur unten oben",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 22,
    },
    {
        "param_id": 14,
        "index": 1,
        "label": "Temperatur unten unten",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 22,
    },

    {
        "param_id": 21,
        "index": 1,
        "label": "Kuehlung oben oben",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 19,
    },
    {
        "param_id": 22,
        "index": 1,
        "label": "Kuehlung oben unten",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 19,
    },
    {
        "param_id": 23,
        "index": 1,
        "label": "Kuehlung unten oben",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 19,
    },
    {
        "param_id": 24,
        "index": 1,
        "label": "Kuehlung unten unten",
        "device_type": "ACTOR",
        "component_type": "HEATING",
        "param_type": "NOMINAL",
        "value": 19,
    },

    {
        "param_id": 330,
        "index": 1,
        "label": "Endlage Offen",
        "device_type": "SENSOR",
        "component_type": "COMPACTOR",
        "param_type": "ACTUAL",
        "value": 0,
    },
    {
        "param_id": 331,
        "index": 1,
        "label": "Endlage Geschlossen",
        "device_type": "SENSOR",
        "component_type": "COMPACTOR",
        "param_type": "ACTUAL",
        "value": 0,
    },
    {
        "param_id": 400,
        "index": 1,
        "label": "Betriebsart",
        "device_type": "ACTOR",
        "component_type": "COMPACTOR",
        "param_type": "STATE",
        "value": 0,
    },
    {
        "param_id": 401,
        "index": 1,
        "label": "Aggregat Status",
        "device_type": "ACTOR",
        "component_type": "AGGREGATE",
        "param_type": "STATE",
        "value": 0,
    },
    {
        "param_id": 402,
        "index": 1,
        "label": "Presse Status",
        "device_type": "ACTOR",
        "component_type": "COMPACTOR",
        "param_type": "STATE",
        "value": 0,
    },

]

COMMANDS = [
    {
        "command_id": 11,
        "label": "Orange Ein",
        "component_type": "LAMP",
    },
    {
        "command_id": 12,
        "label": "Blau Ein",
        "component_type": "LAMP",
    },
    {
        "command_id": 13,
        "label": "Grün Ein",
        "component_type": "LAMP",
    },
    {
        "command_id": 14,
        "label": "Orange Aus",
        "component_type": "LAMP",
    },
    {
        "command_id": 15,
        "label": "Blau Aus",
        "component_type": "LAMP",
    },
    {
        "command_id": 16,
        "label": "Grün Aus",
        "component_type": "LAMP",
    },
    {
        "command_id": 29,
        "label": "Stop",
        "component_type": "COMPACTOR",
    },
    {
        "command_id": 30,
        "label": "Öffnen",
        "component_type": "COMPACTOR",
    },
    {
        "command_id": 31,
        "label": "Schliessen",
        "component_type": "COMPACTOR",
    },
    {
        "command_id": 33,
        "label": "Ein",
        "component_type": "AGGREGATE",
    },
    {
        "command_id": 34,
        "label": "Aus",
        "component_type": "AGGREGATE",
    },
    {
        "command_id": 40,
        "label": "Einrichten",
        "component_type": "OPERATING_MODE",
    },
    {
        "command_id": 41,
        "label": "Manuell",
        "component_type": "OPERATING_MODE",
    },
    {
        "command_id": 42,
        "label": "Automatik",
        "component_type": "OPERATING_MODE",
    },
]

def create_params(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Param = apps.get_model('driver_api', 'Param')
    for param_js in PARAMS:
        p = Param()
        p.param_id = param_js["param_id"]
        p.index = param_js["index"]
        p.label = param_js["label"]
        p.value = param_js["value"]
        p.device_type = param_js["device_type"]
        p.component_type = param_js["component_type"]
        p.param_type = param_js["param_type"]
        p.save()


def create_commands(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Command = apps.get_model('driver_api', 'Command')
    for cmd_js in COMMANDS:
        c = Command()
        c.command_id = cmd_js["command_id"]
        c.label = cmd_js["label"]
        c.component_type = cmd_js["component_type"]
        c.must_run = False
        c.save()

class Migration(migrations.Migration):

    initial = False

    dependencies = [
        ('driver_api', '0001_initial'),
    ]

    operations = [
       migrations.RunPython(create_params),
       migrations.RunPython(create_commands),
    ]
